/**
 * =====================================
 * # ( name ; value )
 *
 * RETURNS:
 *		An name-value pair in Let notation.
 *
 * PARAMETERS:
 *		name: The name for the returned name-value pair. name can be any value that would
 *		be a valid Let() variable name. Any dollar sign "$" characters will be stripped,
 *		since these are reserved by the FSON format.
 *		value: The value for the returned name-value pair.
 *
 * EXAMPLE:
 *		# ( "name"; $value ) & # ( "foo" ; "bar" )
 *
 * DEPENDENCIES: none
 *
 * HISTORY:
 *		MODIFIED on 2012-11-28 by Jeremy Bante <http://scr.im/jbante> to return error
 *		feedback.
 *		CREATED on 2012-11-10 by Jeremy Bante <http://scr.im/jbante>.
 * =====================================
 */

Let ( [
	~name =	// strip leading "$$" and "$"
		Substitute (
			"/*start*/" & name;
			[ "/*start*/$$" ; "" ];
			[ "/*start*/$" ; "" ];
			[ "/*start*/" ; "" ]
		);
	~result =
		~name
		& " = "
		& Quote ( value )
		& ";Â¶";
	~testExpression =
		"Let ( [ $"
		& ~result
		& " ~ = \"\" ]; \"\" )";
	~error =
		Case (
			IsEmpty ( ~name );
				11;	// Name is not valid

			not IsValidExpression ( ~testExpression );
				1200	// Generic calculation err
		)
];
	If ( ~error;	// prevent bad pairs from affecting evaluation of others by commenting
		"/* Error "
		& ~error
		& " "
		& ~result
		& "*/";
	/* Else */
		~result
	)
)